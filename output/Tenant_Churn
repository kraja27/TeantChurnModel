# imports
import pickle
import numpy as np
from flask import Flask, request, render_template, jsonify, Response

# initialize the flask app
app = Flask('myApp')

# route 1: hello world
@app.route('/')
# return a simple string
def home():
    return 'hello world from Flask!'

# route 2: return a 'web page'
@app.route('/hc_page')
# return some hard-coded html
def hc_page():
      return '<html><body><h1>This is a hard coded page!</h1><p>Here is some hard-coded content. Isn\'t it pretty?</p></body></html>'
# route 3: return some data
@app.route('/hc_page.json')
# create some data to return as json
def hc_json():
    best_stuff = {
        'coast': 'both',
        'food': 'breakfast tacos',
        'movie': 'inception'
    }
    return jsonify(best_stuff) # turns our dict into a string

# use flask's jsonify function to return the data as well as a 200 status code


# route 4: show a form to the user
@app.route('/form')
# use flask's render_template function to display an html page
def form():
    return render_template('form.html')

# route 5: accept the form submission and do something fancy with it\
@app.route('/submit')
# load in the form data from the incoming request
def form_submit():
    user_input = request.args
    X_test = np.array([
        int(user_input['OverallQual']),
        int(user_input['FullBath']),
        int(user_input['GarageArea']),
        int(user_input['LotArea'])
    ]).reshape(1, -1) # creating a matrix of one row
    model = pickle.load(open('assets/model.p', 'rb'))
    preds = model.predict(X_test)
    pred = preds[0]
    return render_template('results.html', prediction=pred)
# manipulate data into a format that we pass to our model

# Call app.run(debug=True) when python script is called


if __name__ == '__main__': # python ./app_starter.py
    app.run(debug=True)
